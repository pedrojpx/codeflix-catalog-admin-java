// this is here only to add the flyway dependency
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:9.11.0'
    }
}

plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.flywaydb.flyway' version '9.11.0' //does migration
}

bootJar {
    archiveFileName = "application.jar"
    destinationDirectory = rootProject.layout.buildDirectory.dir("libs")
}

group = 'com.pedrojpx.codeflix.admin.catalog.infrastructure'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))
    implementation('mysql:mysql-connector-java')
    implementation 'io.vavr:vavr:0.10.4' //optional, either, left e right essas coisas
    implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.6.8' // gerador de swagger
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.8' // interface do swagger

    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-undertow') //web server, como se fosse o apache, mas melhor
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')

    testImplementation('org.flywaydb:flyway-core') //flyway-core to run migration by code
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testRuntimeOnly('com.h2database:h2') //in memory database used during tests
}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://localhost:3306/adm_videos'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASS') ?: '123456'
}

test {
    useJUnitPlatform()
}